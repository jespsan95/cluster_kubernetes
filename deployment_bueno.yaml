apiVersion: v1
kind: Namespace
metadata:
  name: wso2
spec:
  finalizers:
    - kubernetes

  apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: wso2svc-account
    namespace : wso2

    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: identity-server-conf
      namespace : wso2
    data:
      deployment.toml: |-
        [server]
        hostname = "$env{HOST_NAME}"
        node_ip = "$env{NODE_IP}"
        # base_path = "https://$ref{server.hostname}:${carbon.management.port}"
        [super_admin]
        username = "admin"
        password = "admin"
        create_admin_account = true
        [user_store]
        type = "read_write_ldap_unique_id"
        connection_url = "ldap://localhost:${Ports.EmbeddedLDAP.LDAPServerPort}"
        connection_name = "uid=admin,ou=system"
        connection_password = "admin"
        base_dn = "dc=wso2,dc=org"      #refers the base dn on which the user and group search bases will be generated
        [database.identity_db]
        type = "mysql"
        url = "jdbc:mysql://192.168.1.102:3306/WSO2IS_IDENTITY_DB?autoReconnect=true&amp;useSSL=false"
        username = "root"
        password = "123456"
        driver = "com.mysql.cj.jdbc.Driver"
        [database.identity_db.pool_options]
        validationQuery = "SELECT 1"
        [database.shared_db]
        type = "mysql"
        url = "jdbc:mysql://192.168.1.102:3306/WSO2IS_SHARED_DB?autoReconnect=true&amp;useSSL=false"
        username = "root"
        password = "123456"
        driver = "com.mysql.cj.jdbc.Driver"
        [database.shared_db.pool_options]
        validationQuery = "SELECT 1"
        [keystore.primary]
        file_name = "wso2carbon.jks"
        password = "wso2carbon"

      apiVersion: v1
      kind: Service
      metadata:
        name: wso2is-service
        namespace: wso2
        labels:
          deployment: wso2is
          app: wso2is
          monitoring: jmx
          pod: wso2is
      spec:
        selector:
          deployment: wso2is
          app: wso2is
        type: NodePort
        ports:
        - name: servlet-http
          port: 9763
          targetPort: 9763
          protocol: TCP
          nodePort: 30763
        - name: servlet-https
          port: 9443
          targetPort: 9443
          protocol: TCP
          nodePort: 30443
  
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: wso2is-deployment
          namespace: wso2
        spec:
          replicas: 1
          minReadySeconds: 100
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 0
            type: RollingUpdate
          selector:
            matchLabels:
              deployment: wso2is
              app: wso2is
              monitoring: jmx
              pod: wso2is
          template:
            metadata:
              labels:
                deployment: wso2is
                app: wso2is
                monitoring: jmx
                pod: wso2is
            spec:
              hostAliases:
                - ip: "127.0.0.1"
                  hostnames:
                    - "wso2is"
              containers:
              - name: wso2is
                image: chakray/wso2is-rpi:5.10.0
                livenessProbe:
                  exec:
                    command:
                    - /bin/sh
                    - -c
                    - nc -z localhost 9443
                  initialDelaySeconds: 250
                  periodSeconds: 10
                readinessProbe:
                  exec:
                    command:
                      - /bin/sh
                      - -c
                      - nc -z localhost 9443
                  initialDelaySeconds: 250
                  periodSeconds: 10
                imagePullPolicy: Always
                resources:
                  requests:
                    memory: "1Gi"
                    cpu: "2000m"
                  limits:
                    memory: "2Gi"
                    cpu: "4000m"
                lifecycle:
                  preStop:
                    exec:
                      command: ["sh", "-c", "${WSO2_SERVER_HOME}/bin/wso2server.sh stop"]
                securityContext:
                  runAsUser: 802
                env:
                  - name: NODE_IP
                    valueFrom:
                      fieldRef:
                        fieldPath: status.podIP
                  - name: HOST_NAME
                    value: wso2is
                ports:
                - containerPort: 9763
                  protocol: TCP
                - containerPort: 9443
                  protocol: TCP
                volumeMounts:
                - name: identity-server-conf
                  mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
                  subPath: deployment.toml
              serviceAccountName: "wso2svc-account"
              imagePullSecrets:
                - name: wso2is-deployment-creds
              volumes:
              - name: identity-server-conf
                configMap:
                  name: identity-server-conf
 